from flask import Flask, jsonify
import requests
import json

app = Flask(__name__)

# ุฅุนุฏุงุฏุงุช API ู Telegram
api_url = "https://sp-today.com/app_api/cur_damascus.json"  # ุฑุงุจุท API ูุฌูุจ ุงูุฃุณุนุงุฑ
telegram_token = "7924669675:AAGLWCdlVRnsRg6yF01-u7PFxwTgJ4ZvBtc"  # ุฑูุฒ ุงูุชููู ุงูุฎุงุต ุจุงูุชูุบุฑุงู
chat_id = "-1002474033832"  # ูุนุฑู ุงูุฏุฑุฏุดุฉ ูู ุงูุชูุบุฑุงู

# ููู ูุชุฎุฒูู ุขุฎุฑ ุณุนุฑ
last_price_file = 'last_price.json'

# ูุงุฆูุฉ ุงูุนููุงุช ุงูุชู ุชุฑูุฏ ุชุชุจุนูุง
currencies_to_track = ["USD", "SAR", "TRY", "AED", "JOD", "EGP", "KWD"]

@app.route('/')
def run_script():
    response = requests.get(api_url)
    data = response.json()

    messages = []
    send_update = False  # ูุชุบูุฑ ูุชุญุฏูุฏ ูุง ุฅุฐุง ูุงู ูุฌุจ ุฅุฑุณุงู ุงูุชุญุฏูุซ

    if data:
        current_prices = {}

        # ูุฑุงุกุฉ ุขุฎุฑ ุงูุฃุณุนุงุฑ ูู ุงูููู
        try:
            with open(last_price_file, 'r') as file:
                last_prices = json.load(file)
        except (FileNotFoundError, json.JSONDecodeError):
            last_prices = {}

        # ุงูุญุตูู ุนูู ุงูุณุนุฑ ุงูุณุงุจู ููุฏููุงุฑ
        last_usd_price = last_prices.get("USD", None)

        # ุชุฎุฒูู ุงูุฃุณุนุงุฑ ุงูุญุงููุฉ
        for currency in data:
            if currency['name'] in currencies_to_track:
                currency_name = currency['ar_name']
                ask_price = currency['ask']
                bid_price = currency['bid']
                change = currency['change']

                # ุชุญุฏูุฏ ุงูุนูู
                flags = {
                    "USD": "๐บ๐ธ", "SAR": "๐ธ๐ฆ", "EUR": "๐ช๐บ", "TRY": "๐น๐ท",
                    "AED": "๐ฆ๐ช", "JOD": "๐ฏ๐ด", "EGP": "๐ช๐ฌ", "KWD": "๐ฐ๐ผ"
                }
                flag = flags.get(currency['name'], "๐ณ๏ธ")

                # ุฅุถุงูุฉ ููุงุญุธุฉ ูุณุนุฑ ุงูุฏููุงุฑ
                usd_message = ""
                if currency['name'] == "USD" and last_usd_price is not None:
                    if ask_price > last_usd_price:
                        usd_message = "๐ ุงูุฎูุงุถ ูู ูููุฉ ุงูููุฑุฉ ุงูุณูุฑูุฉ ุฃูุงู ุงูุฏููุงุฑ"
                    elif ask_price < last_usd_price:
                        usd_message = "๐ ุชุญุณู ูู ูููุฉ ุงูููุฑุฉ ุงูุณูุฑูุฉ ุฃูุงู ุงูุฏููุงุฑ"
                    # ุฅุฐุง ุชุบูุฑ ุณุนุฑ ุงูุฏููุงุฑุ ูููู ุจุชุญุฏูุฏ ุงูุฅุฑุณุงู
                    if ask_price != last_usd_price:
                        send_update = True  

                # ุชูููู ุงูุฑุณุงูุฉ
                message = f"""{flag} {currency_name}
{usd_message}
๐น ุณุนุฑ ุงููุจูุน : {bid_price} ู.ุณ  
๐น ุณุนุฑ ุงูุดุฑุงุก : {ask_price} ู.ุณ  
๐น ุงูุชุบููุฑ : {change}
"""
                messages.append(message)

                # ุชุฎุฒูู ุงูุณุนุฑ ูู ุงููุงููุณ
                current_prices[currency['name']] = ask_price

        # ุฅุฑุณุงู ุงูุชุญุฏูุซ ููุท ุฅุฐุง ุชุบูุฑ ุณุนุฑ ุงูุฏููุงุฑ
        if send_update and messages:
            message_text = "\n๐น ุชุญุฏูุซ ุฃุณุนุงุฑ ุงูุตุฑู :\n\n" + "\n\n".join(messages[:])

            # ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุฅูู Telegram
            telegram_url = f"https://api.telegram.org/bot{telegram_token}/sendMessage?chat_id={chat_id}&text={requests.utils.quote(message_text)}"
            try:
                # ุชูุนูู ุงูุณุทุฑ ุงูุชุงูู ุฅุฐุง ููุช ุชุฑูุฏ ุฅุฑุณุงู ุงูุฑุณุงูุฉ ูุนูููุง
                response = requests.get(telegram_url)
                response.raise_for_status()
                print("โ Message ready to be sent:\n", message_text)

                # ุชุญุฏูุซ ุขุฎุฑ ุงูุฃุณุนุงุฑ ูู ุงูููู
                with open(last_price_file, 'w') as file:
                    json.dump(current_prices, file)

                return jsonify({"status": "success", "message": "ุชู ุฅุฑุณุงู ุงูุชุญุฏูุซ ุฅูู Telegram โ"}), 200
            except requests.exceptions.RequestException as e:
                return jsonify({"status": "error", "message": str(e)}), 500
        else:
            return jsonify({"status": "no_update", "message": "ูู ูุชุบูุฑ ุณุนุฑ ุงูุฏููุงุฑุ ูุง ุญุงุฌุฉ ููุชุญุฏูุซ."}), 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8000)
